openapi: "3.0.0"
info:
  title: Nuts service proxy consent spec
  description: API specification for consent service available at nuts service proxy
  version: 0.1.0
  license:
    name: GPLv3
paths:
  /consent/check:
    post:
      summary: "Send a request for checking if the given combination has valid consent"
      operationId: checkConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentCheckRequest"
      responses:
        '200':
          description: "OK response, body holds outcome of request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentCheckResponse"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for subjectURI"
              schema:
                type: string
  /consent/query:
    post:
      summary: "Do a query for available consent"
      operationId: queryConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentQueryRequest"
      responses:
        '200':
          description: "OK response, body holds outcome of request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentQueryResponse"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for actorURI"
              schema:
                type: string
  /consent:
    post:
      summary: "Create a new consent request"
      operationId: createConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentRequest"
      responses:
        '202':
          description: "OK response, body holds reference to request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentRequestState"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for actorURI"
              schema:
                type: string
  /consent/consent_request_state/{externalID}:
    get:
      summary: "get the ConsentRequestState by the externalID"
      description: "This api can be used to track a request while it's in flight and not yet converted to a consent record."
      operationId: getConsentRequestState
      tags:
        - consent
      parameters:
        - name: externalID
          in: path
          description: "the externalID of the consent record"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "OK response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentRequestState"
        '404':
          description: "not found"
components:
  schemas:
    ConsentCheckRequest:
      required:
        - subjectURI
        - custodianURI
        - actorURI
        - resourceType
      properties:
        subjectURI:
          $ref: "#/components/schemas/SubjectURI"
        custodianURI:
          $ref: "#/components/schemas/CustodianURI"
        actorURI:
          $ref: "#/components/schemas/ActorURI"
        resourceType:
          type: string
          example: "Observation"
    ConsentCheckResponse:
      required:
        - outcome
      properties:
        consentGiven:
          type: string
          enum: ["yes", "no", "limited"]
        limitations:
          type: string
          description: "for future use"
          example:
            "Only measurements are allowed, SOEP not"
    ConsentQueryRequest:
      required:
        - actorURI
        - query
      properties:
        actorURI:
          $ref: "#/components/schemas/ActorURI"
        page:
          $ref: "#/components/schemas/PageDefinition"
        query:
          oneOf:
            - $ref: "#/components/schemas/SubjectQuery"
            - $ref: "#/components/schemas/SubjectURI"
    ConsentQueryResponse:
      required:
        - page
        - results
        - totalResults
      properties:
        page:
          $ref: "#/components/schemas/PageDefinition"
        results:
          type: array
          items:
            $ref: "#/components/schemas/ConsentQueryResult"
        totalResults:
          type: integer
          description: Total number of results
    ConsentQueryResult:
      required:
        - custodianURI
        - subjectURI
        - resourceTypes
      properties:
        custodianURI:
          $ref: "#/components/schemas/CustodianURI"
        subjectURI:
          $ref: "#/components/schemas/SubjectURI"
        resourceType:
          type: array
          items:
            type: string
            example: "Observation"
    ConsentRequest:
      required:
        - subjectURI
        - custodianURI
        - actorURI
        - categoryURI
      properties:
        subjectURI:
          $ref: "#/components/schemas/SubjectURI"
        custodianURI:
          $ref: "#/components/schemas/CustodianURI"
        actorURI:
          $ref: "#/components/schemas/ActorURI"
        categoryURI:
          type: string
          description: "URI describing the general category of consent: social, medical, mental, etc. Categories map to resources"
          example: "https://nuts.nl/CodeSystems/ConsentCategory#medical"
        period:
          $ref: "#/components/schemas/Period"
    ConsentRequestState:
      required:
        - externalID
        - state
      properties:
        externalID:
          type: string
          description: "The unique ID used within the consent DB for this patient/custodian tuple"
        state:
          type: string
          enum: ["new", "update", "stable"]
          description: "new for a new request, update for an existing consent record that is being updated, stable for an available consent record"
    PageDefinition:
      required:
        - offset
        - limit
      properties:
        offset:
          type: integer
        limit:
          type: integer
    ActorURI:
      type: string
      description: "URI defining the user"
      example: "https://nuts.nl/identities/agbcode#00000007"
    CustodianURI:
      type: string
      description: "URI defining the legal entity responsible for the data"
      example: "https://nuts.nl/identities/agbcode#00000000"
    Period:
      required:
        - from
      properties:
        from:
          type: string
          format: date
          description: "inclusive date, starting day of consent"
        to:
          type: string
          format: date
          description: "exclusive date, end day of consent"
    SubjectQuery:
      type: string
      description: "Free text search for finding subjects"
      example: "Mr Janse*"
    SubjectURI:
      type: string
      description: "URI defining the data subject, usually the patient"
      example: "https://nuts.nl/identities/bsn#999999990"


